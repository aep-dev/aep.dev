syntax = "proto3";

package aip.type;

option cc_enable_arenas = true;
option go_package = "aip.golang.org/genproto/common-components/type/decimal;decimal";
option java_multiple_files = true;
option java_outer_classname = "DecimalProto";
option java_package = "dev.aip.type";
option objc_class_prefix = "AIP";

// Represents a decimal number in a form similar to scientific notation.
//
// Examples:
// 17            === {significand: 17   exponent: 0} (or just {significand: 17})
// -0.005        === {significand: -5   exponent: -3}
// 33.5 million  === {significand: 335  exponent: 5}
// 11/8 (1.375)  === {significand: 1375 exponent: -3}
//
// Note that the range of a Decmial exceeds that of a JSON `number` (double), as
// well as that of a `decimal64`.
message Decimal {
  // The significant digits of the number.
  int64 significand = 1;

  // Represents the position of the decimal point within the significand.
  //
  // When the exponent is 0, the value of the Decimal is simply the value of
  // `significand`.
  //
  // When the exponent is greater than 0, represents the number of trailing
  // zeroes after the significant digits.
  //
  // When the exponent is less than 0, represents how many of the significant
  // digits (and implicit leading zeroes, as needed) come after the decmial
  // point.
  int32 exponent = 2;
}
