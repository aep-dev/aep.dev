# Fields

The [`buf.validate.FieldConstraints`][protovalidate] type, through its accompanying
extension `buf.validate.field`, enriches a field's schema beyond the basic
name and type information by specifying constraints or validation rules.

## Guidance

If a field follows a set pattern, it **should** be annotated with a `buf.validate.field` annotation.

If a field has a `buf.validate.field` annotation, that annotation **must** be included on all requests and responses.

If a field has a `buf.validate.field`, any values that do not follow the `buf.validate.field` annotation must return an error.

If a field has a `buf.validate.field`, an API **must** return an error if it attempts to return a value that does not follow the annotation.


#### Backwards compatibility

Adding a validation rule to an existing, unspecified field **is not** backwards
compatible, *unless* the field in question has always been documented as conforming to the format
being specified.

Changing an existing validation rule to a different one in all cases **is not**
backwards compatible.

## Rationale

#### Why add a format specifier?

The format of a primitive-typed field can be critical to its usability. Some
programming languages may convey a specific type format as a standalone type,
as Java does with [UUID][java uuid]. Most have specific structural requirements
that are validated by the service, so conveying the format to the user ahead of
time is critical to their experience.

#### Why discourage primitive equality comparisons?

The text representations of the supported formats have many nuances and
transforming the value into a canonical representation is non-trivial. As such,
aligning implementations between each consumer and each service without any
issue is infeasiable.

#### Why document value normalizations?

While primitive comparison is not recommended for any of the supported formats,
uniform normalization of values is important to set consumer expectations, and
create a user-friendly surface.

[protovalidate]: https://github.com/bufbuild/protovalidate/tree/main/proto/protovalidate
