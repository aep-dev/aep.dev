# Batch methods: Get

Some APIs need to allow users to get a specific set of resources at a
consistent time point (e.g. using a read transaction). A batch get method
provides this functionality.

## Guidance

APIs **may** support batch get to retrieve a consistent set of resources.

- The method's name **must** begin with `BatchGet`. The remainder of the method
  name **must** be the plural form of the resource being retrieved.
- The HTTP verb **must** be `GET`.
- The HTTP URI **must** end with `:BatchGet`.
- The URI path **must** represent the collection for the resource, matching the
  collection used for simple CRUD operations. If the operation spans parents, a
  [wilcard](./reading-across-collections) **may** be accepted.
- There **must not** be a request body.
  - If a GET request contains a body, the body **must** be ignored, and **must
    not** cause an error.

### Request

The request for a batch get method **should** be specified with the following
pattern:

- The request **must** include an array parameter which accepts the resource
  paths specifying the resources to retrieve. The parameter **should** be named
  `paths`.
  - If no resource paths are provided, the API **should** error with
    `INVALID_ARGUMENT`.
  - The parameter **should** be required.
  - The parameter **should** identify the [resource type](./paths) that it
    references.
  - The parameter should define the pattern of the resource path values.
  - The parameter should define the maximum number of paths allowed.
- Other parameters besides `paths` **may** be "hoisted" from the [standard Get
  request][get-request].
- Batch get **should not** support pagination because transactionality across
  API calls would be extremely difficult to implement or enforce, and the
  request defines the exact scope of the response anyway.
- The request **must not** contain any other required parameters, and **should
  not** contain other optional parameters except those described in this or
  another AEP.

{% tab proto -%}

```proto
rpc BatchGetBooks(BatchGetBooksRequest) returns (BatchGetBooksResponse) {
  option (google.api.http) = {
    get: "/v1/{parent=publishers/*}/books:batchGet"
  };
}

message BatchGetBooksRequest {
  // The parent resource shared by all books being retrieved.
  // Format: publishers/{publisher}
  // If this is set, the parent of all of the books specified in `paths`
  // must match this field.
  string parent = 1 [
    (google.api.resource_reference) = {
      child_type: "library.com/Book"
    }];

  // The paths of the books to retrieve.
  // A maximum of 1000 books can be retrieved in a batch.
  // Format: publishers/{publisher}/books/{book}
  repeated string paths = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "library.com/Book"
    }];
}
```

- The request and response schemas **must** match the method name, with
  `Request` and `Response` suffixes.
- A `parent` field **should** be included, unless the resource being retrieved
  is a top-level resource, to facilitate inclusion in the URI as well to permit
  a single permissions check. If a caller sets this field, and the parent
  collection in the path of any resource being retrieved does not match, the
  request **must** fail.
  - This field **should** be required if only 1 parent per request is allowed.
  - The field **should** identify the [resource type][aep-122-parent] that it
    references.
  - The comment for the field **should** document the resource pattern.
- There **must not** be a body key in the `google.api.http` annotation.

{% tab oas %}

{% sample 'batchget.oas.yaml', 'paths' %}

- The `paths` parameter **must** be a query parameter which accepts an array of
  resource paths specifying the resources to retrieve. The parameter **should**
  be named `paths`.
  - If no resource paths are provided, the API **should** error with status
    code `400 Bad Request`.
  - If the collection in the path of any resource does not match the collection
    of the request URL, the request **must** fail.
- The method definition **must not** have a `requestBody` defined.

{% endtabs %}

### Response

The response for a batch get method **should** be specified with the following
pattern:

{% tab proto -%}

```proto
message BatchGetBooksResponse {
  // Books requested.
  repeated Book books = 1;
}
```

- The response message **must** include one repeated field where its items may
  either be a retrieved resource or an error structure describing an error that
  occurred attempting to retrieve the resource. The error alternative would
  only be present for non-transactional batch gets.

{% tab oas %}

- The response schema **must** be `type: object` with a single array property
  with each item containing one of the requested resources.

```json
{
  "results": [
    {
      "name": "publishers/lacroix/books/les-mis",
      "isbn": "978-037-540317-0",
      "title": "Les Mis√©rables",
      "authors": ["Victor Hugo"],
      "rating": 9.6
    },
    {
      "code": "NotFound",
      "message": "The resource is not available"
    }
    {
      "name": "publishers/lacroix/books/hunchback-of-notre-dame",
      "isbn": "978-140-274575-1",
      "title": "The Hunchback of Notre Dame",
      "authors": ["Victor Hugo"],
      "rating": 9.3
    }
  ]
}
```

- The array of resources **must** be named `results` and contain resources with
  no additional wrapping.
- There must not be a `nextPageToken` field as batch get operations are not
  pageable.

{% endtabs %}

- The order of resources/error objects in the response **must** be the same as
  the paths in the request.

### Support for transactional get

The batch get method may support a transactional form of operation where the
get either succeeds for all requested resources or fails. When supported, the
method should define a boolean parameter `asTransaction` that the user must
specify with the value `true` to request transactional operation.

## Changelog

- **2024-04-22:** Adopt from Google AIP https://google.aip.dev/231 with the
  following changes:
  - Dropped the "nested requests" pattern.
  - Changed the response schema to an object with `results` array property.
  - Made transactional operation optional and controlled by asTransaction
    parameter.

<!-- Links -->

[aep-122-paths]: ./0122.md#fields-representing-resource-paths
[aep-122-parent]: ./0122.md#fields-representing-a-resources-parent
[aep-132]: https://aep.dev/132
[get-request]: ./0131.md#get-request
