components:
  schemas:
    book:
      properties:
        author:
          items:
            type: object
          type: array
        edition:
          format: int32
          type: integer
        etag:
          type: string
        id:
          readOnly: true
          type: string
          x-terraform-id: true
        path:
          readOnly: true
          type: string
        price:
          format: float
          type: number
        published:
          type: boolean
      required:
        - price
        - published
      type: object
      x-aep-resource:
        parents:
          - publisher
        patterns:
          - /publishers/{publisher}/books/{book}
        plural: books
        singular: book
    book-edition:
      properties:
        displayname:
          type: string
        id:
          readOnly: true
          type: string
          x-terraform-id: true
        path:
          readOnly: true
          type: string
      required:
        - displayname
      type: object
      x-aep-resource:
        parents:
          - book
        patterns:
          - /publishers/{publisher}/books/{book}/editions/{book-edition}
        plural: book-editions
        singular: book-edition
    isbn:
      properties:
        id:
          readOnly: true
          type: string
          x-terraform-id: true
        path:
          readOnly: true
          type: string
      type: object
      x-aep-resource:
        patterns:
          - /isbns/{isbn}
        plural: isbns
        singular: isbn
    publisher:
      properties:
        description:
          type: string
        etag:
          type: string
        id:
          readOnly: true
          type: string
          x-terraform-id: true
        path:
          readOnly: true
          type: string
      type: object
      x-aep-resource:
        patterns:
          - /publishers/{publisher}
        plural: publishers
        singular: publisher
info:
  title: bookstore.example.com
  version: version not set
openapi: 3.1.0
paths:
  /isbns:
    post:
      parameters:
        - in: query
          name: id
          required: true
          schema: {}
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/isbn'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/isbn'
          description: Successful response
  /isbns/{isbn}:
    get:
      parameters:
        - in: path
          name: isbn
          required: true
          schema: {}
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/isbn'
          description: Successful response
  /publishers:
    get:
      parameters:
        - in: query
          name: max_page_size
          required: true
          schema: {}
          type: integer
        - in: query
          name: page_token
          required: true
          schema: {}
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  results:
                    items:
                      $ref: '#/components/schemas/publisher'
                    type: array
                type: object
          description: Successful response
    post:
      parameters:
        - in: query
          name: id
          required: true
          schema: {}
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/publisher'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publisher'
          description: Successful response
  /publishers/{publisher}:
    delete:
      parameters:
        - in: path
          name: publisher
          required: true
          schema: {}
          type: string
      responses:
        '200':
          content: null
          description: ''
    get:
      parameters:
        - in: path
          name: publisher
          required: true
          schema: {}
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publisher'
          description: Successful response
    patch:
      parameters:
        - in: path
          name: publisher
          required: true
          schema: {}
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/publisher'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publisher'
          description: Successful response
    put:
      parameters:
        - in: path
          name: publisher
          required: true
          schema: {}
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/publisher'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publisher'
          description: Successful response
  /publishers/{publisher}/books:
    get:
      parameters:
        - in: path
          name: publisher
          required: true
          schema: {}
          type: string
        - in: query
          name: max_page_size
          required: true
          schema: {}
          type: integer
        - in: query
          name: page_token
          required: true
          schema: {}
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  results:
                    items:
                      $ref: '#/components/schemas/book'
                    type: array
                  unreachable:
                    items:
                      type: string
                    type: array
                type: object
          description: Successful response
    post:
      parameters:
        - in: path
          name: publisher
          required: true
          schema: {}
          type: string
        - in: query
          name: id
          required: true
          schema: {}
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/book'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/book'
          description: Successful response
  /publishers/{publisher}/books/{book}:
    delete:
      parameters:
        - in: path
          name: publisher
          required: true
          schema: {}
          type: string
        - in: path
          name: book
          required: true
          schema: {}
          type: string
      responses:
        '200':
          content: null
          description: ''
    get:
      parameters:
        - in: path
          name: publisher
          required: true
          schema: {}
          type: string
        - in: path
          name: book
          required: true
          schema: {}
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/book'
          description: Successful response
    patch:
      parameters:
        - in: path
          name: publisher
          required: true
          schema: {}
          type: string
        - in: path
          name: book
          required: true
          schema: {}
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/book'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/book'
          description: Successful response
    put:
      parameters:
        - in: path
          name: publisher
          required: true
          schema: {}
          type: string
        - in: path
          name: book
          required: true
          schema: {}
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/book'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/book'
          description: Successful response
  /publishers/{publisher}/books/{book}/editions:
    get:
      parameters:
        - in: path
          name: publisher
          required: true
          schema: {}
          type: string
        - in: path
          name: book
          required: true
          schema: {}
          type: string
        - in: query
          name: max_page_size
          required: true
          schema: {}
          type: integer
        - in: query
          name: page_token
          required: true
          schema: {}
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  results:
                    items:
                      $ref: '#/components/schemas/book-edition'
                    type: array
                type: object
          description: Successful response
    post:
      parameters:
        - in: path
          name: publisher
          required: true
          schema: {}
          type: string
        - in: path
          name: book
          required: true
          schema: {}
          type: string
        - in: query
          name: id
          required: true
          schema: {}
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/book-edition'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/book-edition'
          description: Successful response
  /publishers/{publisher}/books/{book}/editions/{book-edition}:
    delete:
      parameters:
        - in: path
          name: publisher
          required: true
          schema: {}
          type: string
        - in: path
          name: book
          required: true
          schema: {}
          type: string
        - in: path
          name: book-edition
          required: true
          schema: {}
          type: string
      responses:
        '200':
          content: null
          description: ''
    get:
      parameters:
        - in: path
          name: publisher
          required: true
          schema: {}
          type: string
        - in: path
          name: book
          required: true
          schema: {}
          type: string
        - in: path
          name: book-edition
          required: true
          schema: {}
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/book-edition'
          description: Successful response
servers:
  - url: http://localhost:8081
